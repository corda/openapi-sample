{"ast":null,"code":"import _classCallCheck from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterli/Desktop/Braid/openapi-sample/src/views/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react'; // react plugin for creating charts\n\nimport PropTypes from \"prop-types\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"@material-ui/core/Table\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { NetworkApi } from 'code-gen/src';\nimport { ApiClient } from 'code-gen/src';\nvar useStyles = makeStyles(styles);\nexport var Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props)); // Don't call this.setState() here!\n\n    _this.state = {\n      NetworkParties: []\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var netapi = new NetworkApi(new ApiClient());\n      netapi.networkNodes({}, function (error, data, response) {\n        console.log(\"hello, is it me ...\"); //console.log(JSON.stringify(response));\n        //console.log(data[0].legalIdentities[0].name);\n\n        _this2.setState({\n          NetworkParties: data\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// fetch('http://localhost:10009/api/iou/peers')\n      // .then(res => res.json())\n      // .then((data) => {\n      //   this.setState({ NetworkParties: data.peers })\n      // })\n      // .catch(console.log)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: useStyles.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        className: \"TableHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: useStyles.tableHeadRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Counter Party\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"City\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Country\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"X500Name\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.NetworkParties.map(function (party) {\n        var name = party.legalIdentities[0].name;\n        return React.createElement(TableRow, {\n          className: useStyles.tableBodyRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, name.substring(2, name.indexOf(\",\"))), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, name.substring(12, name.indexOf(\",\", name.indexOf(\",\") + 1))), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, name.substring(name.indexOf(\",\", name.indexOf(\",\") + 2) + 4)), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, name));\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\nDashboard.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nDashboard.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\nexport default Dashboard;","map":{"version":3,"sources":["/Users/peterli/Desktop/Braid/openapi-sample/src/views/Dashboard/Dashboard.js"],"names":["React","Component","PropTypes","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","TableHead","TableRow","TableBody","TableCell","Button","dailySalesChart","emailsSubscriptionChart","completedTasksChart","styles","NetworkApi","ApiClient","useStyles","Dashboard","props","state","NetworkParties","netapi","networkNodes","error","data","response","console","log","setState","table","tableHeadRow","map","party","name","legalIdentities","tableBodyRow","substring","indexOf","defaultProps","tableHeaderColor","propTypes","oneOf","tableHead","arrayOf","string","tableData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AAIA,SACEC,eADF,EAEEC,uBAFF,EAGEC,mBAHF,QAIO,qBAJP;AAMA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,IAAMC,SAAS,GAAGnC,UAAU,CAACgC,MAAD,CAA5B;AAEA,WAAaI,SAAb;AAAA;AAAA;AAAA;;AACE,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAb;AAHiB;AAIlB;;AALH;AAAA;AAAA,wCAMsB;AAAA;;AAClB,UAAMC,MAAM,GAAG,IAAIP,UAAJ,CAAe,IAAIC,SAAJ,EAAf,CAAf;AACAM,MAAAA,MAAM,CAACC,YAAP,CAAoB,EAApB,EAAwB,UAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAA2B;AACjDC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADiD,CAEjD;AACA;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACZR,UAAAA,cAAc,EAAEI;AADJ,SAAd;AAGD,OAPD;AAQD;AAhBH;AAAA;AAAA,yCAmBuB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACD;AA3BH;AAAA;AAAA,6BAgCU;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAER,SAAS,CAACa,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEb,SAAS,CAACc,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,EAIA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,CADA,CADA,EASA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKX,KAAL,CAAWC,cAAX,CAA0BW,GAA1B,CAA8B,UAACC,KAAD,EAAW;AACxC,YAAMC,IAAI,GAAGD,KAAK,CAACE,eAAN,CAAsB,CAAtB,EAAyBD,IAAtC;AACA,eACE,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAEjB,SAAS,CAACmB,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,IAArB;AAA0B,UAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwCF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAiBH,IAAI,CAACI,OAAL,CAAa,GAAb,CAAjB,CAAxC,CADA,EAEA,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BJ,IAAI,CAACG,SAAL,CAAe,EAAf,EAAmBH,IAAI,CAACI,OAAL,CAAa,GAAb,EAAkBJ,IAAI,CAACI,OAAL,CAAa,GAAb,IAAoB,CAAtC,CAAnB,CAA3B,CAFA,EAGA,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BJ,IAAI,CAACG,SAAL,CAAeH,IAAI,CAACI,OAAL,CAAa,GAAb,EAAkBJ,IAAI,CAACI,OAAL,CAAa,GAAb,IAAoB,CAAtC,IAAyC,CAAxD,CAA3B,CAHA,EAIA,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BJ,IAA3B,CAJA,CADF;AAOG,OATJ,CADD,CATA,CADA,CADF;AA0BC;AA3DL;;AAAA;AAAA,EAA+BvD,SAA/B;AA6DEuC,SAAS,CAACqB,YAAV,GAAyB;AACvBC,EAAAA,gBAAgB,EAAE;AADK,CAAzB;AAIAtB,SAAS,CAACuB,SAAV,GAAsB;AACpBD,EAAAA,gBAAgB,EAAE5D,SAAS,CAAC8D,KAAV,CAAgB,CAChC,SADgC,EAEhC,SAFgC,EAGhC,QAHgC,EAIhC,SAJgC,EAKhC,MALgC,EAMhC,MANgC,EAOhC,MAPgC,CAAhB,CADE;AAUpBC,EAAAA,SAAS,EAAE/D,SAAS,CAACgE,OAAV,CAAkBhE,SAAS,CAACiE,MAA5B,CAVS;AAWpBC,EAAAA,SAAS,EAAElE,SAAS,CAACgE,OAAV,CAAkBhE,SAAS,CAACgE,OAAV,CAAkBhE,SAAS,CAACiE,MAA5B,CAAlB;AAXS,CAAtB;AAaA,eAAe3B,SAAf","sourcesContent":["import React, { Component } from 'react';\n// react plugin for creating charts\nimport PropTypes from \"prop-types\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"@material-ui/core/Table\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"components/CustomButtons/Button.js\";\n\n\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { NetworkApi } from 'code-gen/src';\nimport { ApiClient } from 'code-gen/src';\n\nconst useStyles = makeStyles(styles);\n\nexport class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {NetworkParties: []};\n  }\n  componentDidMount() {\n    const netapi = new NetworkApi(new ApiClient());\n    netapi.networkNodes({}, (error, data, response) => {\n      console.log(\"hello, is it me ...\")\n      //console.log(JSON.stringify(response));\n      //console.log(data[0].legalIdentities[0].name);\n      this.setState({\n        NetworkParties: data\n      });\n    });\n  }\n\n\n  componentDidUpdate() {\n\n    // fetch('http://localhost:10009/api/iou/peers')\n    // .then(res => res.json())\n    // .then((data) => {\n    //   this.setState({ NetworkParties: data.peers })\n    // })\n    // .catch(console.log)\n  }\n\n\n\n\n  render(){\n    return (\n      <div>\n      <Table className={useStyles.table}>\n      <TableHead className=\"TableHeader\">\n      <TableRow className={useStyles.tableHeadRow}>\n      <TableCell component=\"th\" scope=\"row\">Counter Party</TableCell>\n      <TableCell align=\"right\">City</TableCell>\n      <TableCell align=\"right\">Country</TableCell>\n      <TableCell align=\"right\">X500Name</TableCell>\n      </TableRow>\n      </TableHead>\n      <TableBody>\n      {this.state.NetworkParties.map((party) => {\n        const name = party.legalIdentities[0].name\n        return(\n          <TableRow className={useStyles.tableBodyRow}>\n          <TableCell component=\"th\" scope=\"row\" >{name.substring(2,name.indexOf(\",\"))}</TableCell>\n          <TableCell align=\"right\" >{name.substring(12, name.indexOf(\",\", name.indexOf(\",\") + 1))}</TableCell>\n          <TableCell align=\"right\" >{name.substring(name.indexOf(\",\", name.indexOf(\",\") + 2)+4)}</TableCell>\n          <TableCell align=\"right\" >{name}</TableCell>\n          </TableRow>\n        );})}\n        </TableBody>\n        </Table>\n        </div>\n      );\n    }\n  }\n  Dashboard.defaultProps = {\n    tableHeaderColor: \"gray\"\n  };\n\n  Dashboard.propTypes = {\n    tableHeaderColor: PropTypes.oneOf([\n      \"warning\",\n      \"primary\",\n      \"danger\",\n      \"success\",\n      \"info\",\n      \"rose\",\n      \"gray\"\n    ]),\n    tableHead: PropTypes.arrayOf(PropTypes.string),\n    tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n  };\n  export default Dashboard\n"]},"metadata":{},"sourceType":"module"}