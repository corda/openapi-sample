{"ast":null,"code":"import _classCallCheck from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\nimport ApiClient from '../ApiClient';\n/**\n * The NetCordaCoreCryptoPartialMerkleTree model module.\n * @module io.generated.model/NetCordaCoreCryptoPartialMerkleTree\n * @version 1.0.0\n */\n\nvar NetCordaCoreCryptoPartialMerkleTree =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new <code>NetCordaCoreCryptoPartialMerkleTree</code>.\n   * @alias module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree\n   */\n  function NetCordaCoreCryptoPartialMerkleTree() {\n    _classCallCheck(this, NetCordaCoreCryptoPartialMerkleTree);\n\n    NetCordaCoreCryptoPartialMerkleTree.initialize(this);\n  }\n  /**\n   * Initializes the fields of this object.\n   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n   * Only for internal use.\n   */\n\n\n  _createClass(NetCordaCoreCryptoPartialMerkleTree, null, [{\n    key: \"initialize\",\n    value: function initialize(obj) {}\n    /**\n     * Constructs a <code>NetCordaCoreCryptoPartialMerkleTree</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree} obj Optional instance to populate.\n     * @return {module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree} The populated <code>NetCordaCoreCryptoPartialMerkleTree</code> instance.\n     */\n\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj) {\n      if (data) {\n        obj = obj || new NetCordaCoreCryptoPartialMerkleTree();\n\n        if (data.hasOwnProperty('root')) {\n          obj['root'] = ApiClient.convertToType(data['root'], Object);\n        }\n      }\n\n      return obj;\n    }\n  }]);\n\n  return NetCordaCoreCryptoPartialMerkleTree;\n}();\n/**\n * @member {Object} root\n */\n\n\nNetCordaCoreCryptoPartialMerkleTree.prototype['root'] = undefined;\nexport default NetCordaCoreCryptoPartialMerkleTree;","map":{"version":3,"sources":["/Users/peterli/Desktop/Braid/openapi-sample/src/code-gen/src/io.generated.model/NetCordaCoreCryptoPartialMerkleTree.js"],"names":["ApiClient","NetCordaCoreCryptoPartialMerkleTree","initialize","obj","data","hasOwnProperty","convertToType","Object","prototype","undefined"],"mappings":";;;AAAA;;;;;;;;;;;;AAaA,OAAOA,SAAP,MAAsB,cAAtB;AAEA;;;;;;IAKMC,mC;;;AACF;;;;AAIA,iDAAc;AAAA;;AAEVA,IAAAA,mCAAmC,CAACC,UAApC,CAA+C,IAA/C;AACH;AAED;;;;;;;;;+BAKkBC,G,EAAK,CACtB;AAED;;;;;;;;;;wCAO2BC,I,EAAMD,G,EAAK;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIF,mCAAJ,EAAb;;AAEA,YAAIG,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,UAAAA,GAAG,CAAC,MAAD,CAAH,GAAcH,SAAS,CAACM,aAAV,CAAwBF,IAAI,CAAC,MAAD,CAA5B,EAAsCG,MAAtC,CAAd;AACH;AACJ;;AACD,aAAOJ,GAAP;AACH;;;;;AAKL;;;;;AAGAF,mCAAmC,CAACO,SAApC,CAA8C,MAA9C,IAAwDC,SAAxD;AAOA,eAAeR,mCAAf","sourcesContent":["/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\n\n/**\n * The NetCordaCoreCryptoPartialMerkleTree model module.\n * @module io.generated.model/NetCordaCoreCryptoPartialMerkleTree\n * @version 1.0.0\n */\nclass NetCordaCoreCryptoPartialMerkleTree {\n    /**\n     * Constructs a new <code>NetCordaCoreCryptoPartialMerkleTree</code>.\n     * @alias module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree\n     */\n    constructor() { \n        \n        NetCordaCoreCryptoPartialMerkleTree.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>NetCordaCoreCryptoPartialMerkleTree</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree} obj Optional instance to populate.\n     * @return {module:io.generated.model/NetCordaCoreCryptoPartialMerkleTree} The populated <code>NetCordaCoreCryptoPartialMerkleTree</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new NetCordaCoreCryptoPartialMerkleTree();\n\n            if (data.hasOwnProperty('root')) {\n                obj['root'] = ApiClient.convertToType(data['root'], Object);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {Object} root\n */\nNetCordaCoreCryptoPartialMerkleTree.prototype['root'] = undefined;\n\n\n\n\n\n\nexport default NetCordaCoreCryptoPartialMerkleTree;\n\n"]},"metadata":{},"sourceType":"module"}