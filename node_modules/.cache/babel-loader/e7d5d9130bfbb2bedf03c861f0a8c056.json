{"ast":null,"code":"import _classCallCheck from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\nimport ApiClient from '../ApiClient';\nimport NetCordaCoreIdentityParty from './NetCordaCoreIdentityParty';\nimport NetCordaCoreIdentityPartyAndCertificate from './NetCordaCoreIdentityPartyAndCertificate';\nimport NetCordaCoreUtilitiesNetworkHostAndPort from './NetCordaCoreUtilitiesNetworkHostAndPort';\n/**\n * The NetCordaCoreNodeNodeInfo model module.\n * @module io.generated.model/NetCordaCoreNodeNodeInfo\n * @version 1.0.0\n */\n\nvar NetCordaCoreNodeNodeInfo =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new <code>NetCordaCoreNodeNodeInfo</code>.\n   * @alias module:io.generated.model/NetCordaCoreNodeNodeInfo\n   * @param addresses {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} \n   * @param legalIdentitiesAndCerts {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} \n   * @param platformVersion {Number} \n   * @param serial {Number} \n   * @param legalIdentities {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} \n   */\n  function NetCordaCoreNodeNodeInfo(addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) {\n    _classCallCheck(this, NetCordaCoreNodeNodeInfo);\n\n    NetCordaCoreNodeNodeInfo.initialize(this, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities);\n  }\n  /**\n   * Initializes the fields of this object.\n   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n   * Only for internal use.\n   */\n\n\n  _createClass(NetCordaCoreNodeNodeInfo, null, [{\n    key: \"initialize\",\n    value: function initialize(obj, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) {\n      obj['addresses'] = addresses;\n      obj['legalIdentitiesAndCerts'] = legalIdentitiesAndCerts;\n      obj['platformVersion'] = platformVersion;\n      obj['serial'] = serial;\n      obj['legalIdentities'] = legalIdentities;\n    }\n    /**\n     * Constructs a <code>NetCordaCoreNodeNodeInfo</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:io.generated.model/NetCordaCoreNodeNodeInfo} obj Optional instance to populate.\n     * @return {module:io.generated.model/NetCordaCoreNodeNodeInfo} The populated <code>NetCordaCoreNodeNodeInfo</code> instance.\n     */\n\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj) {\n      if (data) {\n        obj = obj || new NetCordaCoreNodeNodeInfo();\n\n        if (data.hasOwnProperty('addresses')) {\n          obj['addresses'] = ApiClient.convertToType(data['addresses'], [NetCordaCoreUtilitiesNetworkHostAndPort]);\n        }\n\n        if (data.hasOwnProperty('legalIdentitiesAndCerts')) {\n          obj['legalIdentitiesAndCerts'] = ApiClient.convertToType(data['legalIdentitiesAndCerts'], [NetCordaCoreIdentityPartyAndCertificate]);\n        }\n\n        if (data.hasOwnProperty('platformVersion')) {\n          obj['platformVersion'] = ApiClient.convertToType(data['platformVersion'], 'Number');\n        }\n\n        if (data.hasOwnProperty('serial')) {\n          obj['serial'] = ApiClient.convertToType(data['serial'], 'Number');\n        }\n\n        if (data.hasOwnProperty('legalIdentities')) {\n          obj['legalIdentities'] = ApiClient.convertToType(data['legalIdentities'], [NetCordaCoreIdentityParty]);\n        }\n      }\n\n      return obj;\n    }\n  }]);\n\n  return NetCordaCoreNodeNodeInfo;\n}();\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} addresses\n */\n\n\nNetCordaCoreNodeNodeInfo.prototype['addresses'] = undefined;\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} legalIdentitiesAndCerts\n */\n\nNetCordaCoreNodeNodeInfo.prototype['legalIdentitiesAndCerts'] = undefined;\n/**\n * @member {Number} platformVersion\n */\n\nNetCordaCoreNodeNodeInfo.prototype['platformVersion'] = undefined;\n/**\n * @member {Number} serial\n */\n\nNetCordaCoreNodeNodeInfo.prototype['serial'] = undefined;\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} legalIdentities\n */\n\nNetCordaCoreNodeNodeInfo.prototype['legalIdentities'] = undefined;\nexport default NetCordaCoreNodeNodeInfo;","map":{"version":3,"sources":["/Users/peterli/Desktop/Braid/openapi-sample/src/code-gen/src/io.generated.model/NetCordaCoreNodeNodeInfo.js"],"names":["ApiClient","NetCordaCoreIdentityParty","NetCordaCoreIdentityPartyAndCertificate","NetCordaCoreUtilitiesNetworkHostAndPort","NetCordaCoreNodeNodeInfo","addresses","legalIdentitiesAndCerts","platformVersion","serial","legalIdentities","initialize","obj","data","hasOwnProperty","convertToType","prototype","undefined"],"mappings":";;;AAAA;;;;;;;;;;;;AAaA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,uCAAP,MAAoD,2CAApD;AACA,OAAOC,uCAAP,MAAoD,2CAApD;AAEA;;;;;;IAKMC,wB;;;AACF;;;;;;;;;AASA,oCAAYC,SAAZ,EAAuBC,uBAAvB,EAAgDC,eAAhD,EAAiEC,MAAjE,EAAyEC,eAAzE,EAA0F;AAAA;;AAEtFL,IAAAA,wBAAwB,CAACM,UAAzB,CAAoC,IAApC,EAA0CL,SAA1C,EAAqDC,uBAArD,EAA8EC,eAA9E,EAA+FC,MAA/F,EAAuGC,eAAvG;AACH;AAED;;;;;;;;;+BAKkBE,G,EAAKN,S,EAAWC,uB,EAAyBC,e,EAAiBC,M,EAAQC,e,EAAiB;AACjGE,MAAAA,GAAG,CAAC,WAAD,CAAH,GAAmBN,SAAnB;AACAM,MAAAA,GAAG,CAAC,yBAAD,CAAH,GAAiCL,uBAAjC;AACAK,MAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBJ,eAAzB;AACAI,MAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBH,MAAhB;AACAG,MAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBF,eAAzB;AACH;AAED;;;;;;;;;;wCAO2BG,I,EAAMD,G,EAAK;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIP,wBAAJ,EAAb;;AAEA,YAAIQ,IAAI,CAACC,cAAL,CAAoB,WAApB,CAAJ,EAAsC;AAClCF,UAAAA,GAAG,CAAC,WAAD,CAAH,GAAmBX,SAAS,CAACc,aAAV,CAAwBF,IAAI,CAAC,WAAD,CAA5B,EAA2C,CAACT,uCAAD,CAA3C,CAAnB;AACH;;AACD,YAAIS,IAAI,CAACC,cAAL,CAAoB,yBAApB,CAAJ,EAAoD;AAChDF,UAAAA,GAAG,CAAC,yBAAD,CAAH,GAAiCX,SAAS,CAACc,aAAV,CAAwBF,IAAI,CAAC,yBAAD,CAA5B,EAAyD,CAACV,uCAAD,CAAzD,CAAjC;AACH;;AACD,YAAIU,IAAI,CAACC,cAAL,CAAoB,iBAApB,CAAJ,EAA4C;AACxCF,UAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBX,SAAS,CAACc,aAAV,CAAwBF,IAAI,CAAC,iBAAD,CAA5B,EAAiD,QAAjD,CAAzB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAC/BF,UAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBX,SAAS,CAACc,aAAV,CAAwBF,IAAI,CAAC,QAAD,CAA5B,EAAwC,QAAxC,CAAhB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,iBAApB,CAAJ,EAA4C;AACxCF,UAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBX,SAAS,CAACc,aAAV,CAAwBF,IAAI,CAAC,iBAAD,CAA5B,EAAiD,CAACX,yBAAD,CAAjD,CAAzB;AACH;AACJ;;AACD,aAAOU,GAAP;AACH;;;;;AAKL;;;;;AAGAP,wBAAwB,CAACW,SAAzB,CAAmC,WAAnC,IAAkDC,SAAlD;AAEA;;;;AAGAZ,wBAAwB,CAACW,SAAzB,CAAmC,yBAAnC,IAAgEC,SAAhE;AAEA;;;;AAGAZ,wBAAwB,CAACW,SAAzB,CAAmC,iBAAnC,IAAwDC,SAAxD;AAEA;;;;AAGAZ,wBAAwB,CAACW,SAAzB,CAAmC,QAAnC,IAA+CC,SAA/C;AAEA;;;;AAGAZ,wBAAwB,CAACW,SAAzB,CAAmC,iBAAnC,IAAwDC,SAAxD;AAOA,eAAeZ,wBAAf","sourcesContent":["/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport NetCordaCoreIdentityParty from './NetCordaCoreIdentityParty';\nimport NetCordaCoreIdentityPartyAndCertificate from './NetCordaCoreIdentityPartyAndCertificate';\nimport NetCordaCoreUtilitiesNetworkHostAndPort from './NetCordaCoreUtilitiesNetworkHostAndPort';\n\n/**\n * The NetCordaCoreNodeNodeInfo model module.\n * @module io.generated.model/NetCordaCoreNodeNodeInfo\n * @version 1.0.0\n */\nclass NetCordaCoreNodeNodeInfo {\n    /**\n     * Constructs a new <code>NetCordaCoreNodeNodeInfo</code>.\n     * @alias module:io.generated.model/NetCordaCoreNodeNodeInfo\n     * @param addresses {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} \n     * @param legalIdentitiesAndCerts {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} \n     * @param platformVersion {Number} \n     * @param serial {Number} \n     * @param legalIdentities {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} \n     */\n    constructor(addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) { \n        \n        NetCordaCoreNodeNodeInfo.initialize(this, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) { \n        obj['addresses'] = addresses;\n        obj['legalIdentitiesAndCerts'] = legalIdentitiesAndCerts;\n        obj['platformVersion'] = platformVersion;\n        obj['serial'] = serial;\n        obj['legalIdentities'] = legalIdentities;\n    }\n\n    /**\n     * Constructs a <code>NetCordaCoreNodeNodeInfo</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:io.generated.model/NetCordaCoreNodeNodeInfo} obj Optional instance to populate.\n     * @return {module:io.generated.model/NetCordaCoreNodeNodeInfo} The populated <code>NetCordaCoreNodeNodeInfo</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new NetCordaCoreNodeNodeInfo();\n\n            if (data.hasOwnProperty('addresses')) {\n                obj['addresses'] = ApiClient.convertToType(data['addresses'], [NetCordaCoreUtilitiesNetworkHostAndPort]);\n            }\n            if (data.hasOwnProperty('legalIdentitiesAndCerts')) {\n                obj['legalIdentitiesAndCerts'] = ApiClient.convertToType(data['legalIdentitiesAndCerts'], [NetCordaCoreIdentityPartyAndCertificate]);\n            }\n            if (data.hasOwnProperty('platformVersion')) {\n                obj['platformVersion'] = ApiClient.convertToType(data['platformVersion'], 'Number');\n            }\n            if (data.hasOwnProperty('serial')) {\n                obj['serial'] = ApiClient.convertToType(data['serial'], 'Number');\n            }\n            if (data.hasOwnProperty('legalIdentities')) {\n                obj['legalIdentities'] = ApiClient.convertToType(data['legalIdentities'], [NetCordaCoreIdentityParty]);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} addresses\n */\nNetCordaCoreNodeNodeInfo.prototype['addresses'] = undefined;\n\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} legalIdentitiesAndCerts\n */\nNetCordaCoreNodeNodeInfo.prototype['legalIdentitiesAndCerts'] = undefined;\n\n/**\n * @member {Number} platformVersion\n */\nNetCordaCoreNodeNodeInfo.prototype['platformVersion'] = undefined;\n\n/**\n * @member {Number} serial\n */\nNetCordaCoreNodeNodeInfo.prototype['serial'] = undefined;\n\n/**\n * @member {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} legalIdentities\n */\nNetCordaCoreNodeNodeInfo.prototype['legalIdentities'] = undefined;\n\n\n\n\n\n\nexport default NetCordaCoreNodeNodeInfo;\n\n"]},"metadata":{},"sourceType":"module"}