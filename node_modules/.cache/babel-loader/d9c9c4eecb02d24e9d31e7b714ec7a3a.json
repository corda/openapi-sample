{"ast":null,"code":"import _defineProperty from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/peterli/Desktop/Braid/openapi-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/peterli/Desktop/Braid/openapi-sample/src/components/Card/CardBody.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CardBody(props) {\n  var _classNames;\n\n  var classes = useStyles();\n\n  var className = props.className,\n      children = props.children,\n      plain = props.plain,\n      profile = props.profile,\n      rest = _objectWithoutProperties(props, [\"className\", \"children\", \"plain\", \"profile\"]);\n\n  var cardBodyClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.cardBody, true), _defineProperty(_classNames, classes.cardBodyPlain, plain), _defineProperty(_classNames, classes.cardBodyProfile, profile), _defineProperty(_classNames, className, className !== undefined), _classNames));\n  return React.createElement(\"div\", Object.assign({\n    className: cardBodyClasses\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), children);\n}\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/Users/peterli/Desktop/Braid/openapi-sample/src/components/Card/CardBody.js"],"names":["React","classNames","PropTypes","makeStyles","styles","useStyles","CardBody","props","classes","className","children","plain","profile","rest","cardBodyClasses","cardBody","cardBodyPlain","cardBodyProfile","undefined","propTypes","string","bool","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;AAEA;;AACA,OAAOC,MAAP,MAAmB,iEAAnB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B;AAEA,eAAe,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AADsC,MAE9BI,SAF8B,GAEmBF,KAFnB,CAE9BE,SAF8B;AAAA,MAEnBC,QAFmB,GAEmBH,KAFnB,CAEnBG,QAFmB;AAAA,MAETC,KAFS,GAEmBJ,KAFnB,CAETI,KAFS;AAAA,MAEFC,OAFE,GAEmBL,KAFnB,CAEFK,OAFE;AAAA,MAEUC,IAFV,4BAEmBN,KAFnB;;AAGtC,MAAMO,eAAe,GAAGb,UAAU,iDAC/BO,OAAO,CAACO,QADuB,EACZ,IADY,gCAE/BP,OAAO,CAACQ,aAFuB,EAEPL,KAFO,gCAG/BH,OAAO,CAACS,eAHuB,EAGLL,OAHK,gCAI/BH,SAJ+B,EAInBA,SAAS,KAAKS,SAJK,gBAAlC;AAMA,SACE;AAAK,IAAA,SAAS,EAAEJ;AAAhB,KAAqCD,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,QADH,CADF;AAKD;AAEDJ,QAAQ,CAACa,SAAT,GAAqB;AACnBV,EAAAA,SAAS,EAAEP,SAAS,CAACkB,MADF;AAEnBT,EAAAA,KAAK,EAAET,SAAS,CAACmB,IAFE;AAGnBT,EAAAA,OAAO,EAAEV,SAAS,CAACmB,IAHA;AAInBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB;AAJD,CAArB","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n"]},"metadata":{},"sourceType":"module"}