/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState from './NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState';
import NetCordaCoreNodeServicesVaultStateMetadata from './NetCordaCoreNodeServicesVaultStateMetadata';

/**
 * The NetCordaCoreNodeServicesVaultPage model module.
 * @module io.generated.model/NetCordaCoreNodeServicesVaultPage
 * @version 1.0.0
 */
class NetCordaCoreNodeServicesVaultPage {
    /**
     * Constructs a new <code>NetCordaCoreNodeServicesVaultPage</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeServicesVaultPage
     * @param states {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} 
     * @param statesMetadata {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata>} 
     * @param totalStatesAvailable {Number} 
     * @param stateTypes {module:io.generated.model/NetCordaCoreNodeServicesVaultPage.StateTypesEnum} 
     * @param otherResults {Array.<Object>} 
     */
    constructor(states, statesMetadata, totalStatesAvailable, stateTypes, otherResults) { 
        
        NetCordaCoreNodeServicesVaultPage.initialize(this, states, statesMetadata, totalStatesAvailable, stateTypes, otherResults);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, states, statesMetadata, totalStatesAvailable, stateTypes, otherResults) { 
        obj['states'] = states;
        obj['statesMetadata'] = statesMetadata;
        obj['totalStatesAvailable'] = totalStatesAvailable;
        obj['stateTypes'] = stateTypes;
        obj['otherResults'] = otherResults;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeServicesVaultPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeServicesVaultPage} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeServicesVaultPage} The populated <code>NetCordaCoreNodeServicesVaultPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeServicesVaultPage();

            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], [NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState]);
            }
            if (data.hasOwnProperty('statesMetadata')) {
                obj['statesMetadata'] = ApiClient.convertToType(data['statesMetadata'], [NetCordaCoreNodeServicesVaultStateMetadata]);
            }
            if (data.hasOwnProperty('totalStatesAvailable')) {
                obj['totalStatesAvailable'] = ApiClient.convertToType(data['totalStatesAvailable'], 'Number');
            }
            if (data.hasOwnProperty('stateTypes')) {
                obj['stateTypes'] = ApiClient.convertToType(data['stateTypes'], 'String');
            }
            if (data.hasOwnProperty('otherResults')) {
                obj['otherResults'] = ApiClient.convertToType(data['otherResults'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} states
 */
NetCordaCoreNodeServicesVaultPage.prototype['states'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata>} statesMetadata
 */
NetCordaCoreNodeServicesVaultPage.prototype['statesMetadata'] = undefined;

/**
 * @member {Number} totalStatesAvailable
 */
NetCordaCoreNodeServicesVaultPage.prototype['totalStatesAvailable'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultPage.StateTypesEnum} stateTypes
 */
NetCordaCoreNodeServicesVaultPage.prototype['stateTypes'] = undefined;

/**
 * @member {Array.<Object>} otherResults
 */
NetCordaCoreNodeServicesVaultPage.prototype['otherResults'] = undefined;





/**
 * Allowed values for the <code>stateTypes</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultPage['StateTypesEnum'] = {

    /**
     * value: "UNCONSUMED"
     * @const
     */
    "UNCONSUMED": "UNCONSUMED",

    /**
     * value: "CONSUMED"
     * @const
     */
    "CONSUMED": "CONSUMED",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};



export default NetCordaCoreNodeServicesVaultPage;

