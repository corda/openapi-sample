/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState from './NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState';

/**
 * The NetCordaCoreNodeServicesVaultUpdate model module.
 * @module io.generated.model/NetCordaCoreNodeServicesVaultUpdate
 * @version 1.0.0
 */
class NetCordaCoreNodeServicesVaultUpdate {
    /**
     * Constructs a new <code>NetCordaCoreNodeServicesVaultUpdate</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeServicesVaultUpdate
     * @param consumed {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} 
     * @param produced {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} 
     * @param type {module:io.generated.model/NetCordaCoreNodeServicesVaultUpdate.TypeEnum} 
     * @param references {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} 
     * @param empty {Boolean} 
     */
    constructor(consumed, produced, type, references, empty) { 
        
        NetCordaCoreNodeServicesVaultUpdate.initialize(this, consumed, produced, type, references, empty);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, consumed, produced, type, references, empty) { 
        obj['consumed'] = consumed;
        obj['produced'] = produced;
        obj['type'] = type;
        obj['references'] = references;
        obj['empty'] = empty;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeServicesVaultUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeServicesVaultUpdate} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeServicesVaultUpdate} The populated <code>NetCordaCoreNodeServicesVaultUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeServicesVaultUpdate();

            if (data.hasOwnProperty('consumed')) {
                obj['consumed'] = ApiClient.convertToType(data['consumed'], [NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState]);
            }
            if (data.hasOwnProperty('produced')) {
                obj['produced'] = ApiClient.convertToType(data['produced'], [NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState]);
            }
            if (data.hasOwnProperty('flowId')) {
                obj['flowId'] = ApiClient.convertToType(data['flowId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('references')) {
                obj['references'] = ApiClient.convertToType(data['references'], [NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState]);
            }
            if (data.hasOwnProperty('empty')) {
                obj['empty'] = ApiClient.convertToType(data['empty'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} consumed
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['consumed'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} produced
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['produced'] = undefined;

/**
 * @member {String} flowId
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['flowId'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultUpdate.TypeEnum} type
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['type'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateAndRefNetCordaCoreContractsContractState>} references
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['references'] = undefined;

/**
 * @member {Boolean} empty
 */
NetCordaCoreNodeServicesVaultUpdate.prototype['empty'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultUpdate['TypeEnum'] = {

    /**
     * value: "GENERAL"
     * @const
     */
    "GENERAL": "GENERAL",

    /**
     * value: "NOTARY_CHANGE"
     * @const
     */
    "NOTARY_CHANGE": "NOTARY_CHANGE",

    /**
     * value: "CONTRACT_UPGRADE"
     * @const
     */
    "CONTRACT_UPGRADE": "CONTRACT_UPGRADE"
};



export default NetCordaCoreNodeServicesVaultUpdate;

