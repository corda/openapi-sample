/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreNodeServicesVaultColumnPredicate from './NetCordaCoreNodeServicesVaultColumnPredicate';
import NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf from './NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf';
import NetCordaCoreNodeServicesVaultColumnPredicateInstant from './NetCordaCoreNodeServicesVaultColumnPredicateInstant';
import NetCordaCoreNodeServicesVaultColumnPredicateLong from './NetCordaCoreNodeServicesVaultColumnPredicateLong';
import NetCordaCoreNodeServicesVaultColumnPredicateObject from './NetCordaCoreNodeServicesVaultColumnPredicateObject';

/**
 * The NetCordaCoreNodeServicesVaultColumnPredicateBetween model module.
 * @module io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateBetween
 * @version 1.0.0
 */
class NetCordaCoreNodeServicesVaultColumnPredicateBetween {
    /**
     * Constructs a new <code>NetCordaCoreNodeServicesVaultColumnPredicateBetween</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateBetween
     * @extends 
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicate
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateInstant
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateObject
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateLong
     */
    constructor() { 
        NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf.initialize(this);
        NetCordaCoreNodeServicesVaultColumnPredicateBetween.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['rightToLiteral'] = rightToLiteral;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeServicesVaultColumnPredicateBetween</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateBetween} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeServicesVaultColumnPredicateBetween} The populated <code>NetCordaCoreNodeServicesVaultColumnPredicateBetween</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeServicesVaultColumnPredicateBetween();

            ApiClient.constructFromObject(data, obj, '');
            
            NetCordaCoreNodeServicesVaultColumnPredicate.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultColumnPredicateInstant.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultColumnPredicateObject.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultColumnPredicateLong.constructFromObject(data, obj);

            if (data.hasOwnProperty('rightToLiteral')) {
                obj['rightToLiteral'] = ApiClient.convertToType(data['rightToLiteral'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {Object} rightToLiteral
 */
NetCordaCoreNodeServicesVaultColumnPredicateBetween.prototype['rightToLiteral'] = undefined;


// Implement NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf interface:
/**
 * @member {Object} rightToLiteral
 */
NetCordaCoreNodeServicesVaultColumnPredicateBetweenAllOf.prototype['rightToLiteral'] = undefined;




export default NetCordaCoreNodeServicesVaultColumnPredicateBetween;

