/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreContractsStateRef from './NetCordaCoreContractsStateRef';
import NetCordaCoreIdentityAbstractParty from './NetCordaCoreIdentityAbstractParty';
import NetCordaCoreNodeServicesVaultConstraintInfo from './NetCordaCoreNodeServicesVaultConstraintInfo';
import NetCordaCoreNodeServicesVaultQueryCriteria from './NetCordaCoreNodeServicesVaultQueryCriteria';
import NetCordaCoreNodeServicesVaultQueryCriteriaSoftLockingCondition from './NetCordaCoreNodeServicesVaultQueryCriteriaSoftLockingCondition';
import NetCordaCoreNodeServicesVaultQueryCriteriaTimeCondition from './NetCordaCoreNodeServicesVaultQueryCriteriaTimeCondition';
import NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf from './NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf';

/**
 * The NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria model module.
 * @module io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria
 * @version 1.0.0
 */
class NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria {
    /**
     * Constructs a new <code>NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria
     * @extends 
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteria
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf
     * @implements module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteria
     */
    constructor() { 
        NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.initialize(this);
        NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['status'] = status;
        obj['relevancyStatus'] = relevancyStatus;
        obj['constraintTypes'] = constraintTypes;
        obj['constraints'] = constraints;
        obj['externalIds'] = externalIds;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria} The populated <code>NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria();

            ApiClient.constructFromObject(data, obj, '');
            
            NetCordaCoreNodeServicesVaultQueryCriteria.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.constructFromObject(data, obj);
            NetCordaCoreNodeServicesVaultQueryCriteria.constructFromObject(data, obj);

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('contractStateTypes')) {
                obj['contractStateTypes'] = ApiClient.convertToType(data['contractStateTypes'], ['String']);
            }
            if (data.hasOwnProperty('stateRefs')) {
                obj['stateRefs'] = ApiClient.convertToType(data['stateRefs'], [NetCordaCoreContractsStateRef]);
            }
            if (data.hasOwnProperty('notary')) {
                obj['notary'] = ApiClient.convertToType(data['notary'], [NetCordaCoreIdentityAbstractParty]);
            }
            if (data.hasOwnProperty('softLockingCondition')) {
                obj['softLockingCondition'] = NetCordaCoreNodeServicesVaultQueryCriteriaSoftLockingCondition.constructFromObject(data['softLockingCondition']);
            }
            if (data.hasOwnProperty('timeCondition')) {
                obj['timeCondition'] = NetCordaCoreNodeServicesVaultQueryCriteriaTimeCondition.constructFromObject(data['timeCondition']);
            }
            if (data.hasOwnProperty('relevancyStatus')) {
                obj['relevancyStatus'] = ApiClient.convertToType(data['relevancyStatus'], 'String');
            }
            if (data.hasOwnProperty('constraintTypes')) {
                obj['constraintTypes'] = ApiClient.convertToType(data['constraintTypes'], ['String']);
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], [NetCordaCoreNodeServicesVaultConstraintInfo]);
            }
            if (data.hasOwnProperty('participants')) {
                obj['participants'] = ApiClient.convertToType(data['participants'], [NetCordaCoreIdentityAbstractParty]);
            }
            if (data.hasOwnProperty('externalIds')) {
                obj['externalIds'] = ApiClient.convertToType(data['externalIds'], ['String']);
            }
            if (data.hasOwnProperty('exactParticipants')) {
                obj['exactParticipants'] = ApiClient.convertToType(data['exactParticipants'], [NetCordaCoreIdentityAbstractParty]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.StatusEnum} status
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['status'] = undefined;

/**
 * @member {Array.<String>} contractStateTypes
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['contractStateTypes'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateRef>} stateRefs
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['stateRefs'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} notary
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['notary'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaSoftLockingCondition} softLockingCondition
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['softLockingCondition'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaTimeCondition} timeCondition
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['timeCondition'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.RelevancyStatusEnum} relevancyStatus
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['relevancyStatus'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.ConstraintTypesEnum>} constraintTypes
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['constraintTypes'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultConstraintInfo>} constraints
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['constraints'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} participants
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['participants'] = undefined;

/**
 * @member {Array.<String>} externalIds
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['externalIds'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} exactParticipants
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria.prototype['exactParticipants'] = undefined;


// Implement NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf interface:
/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.StatusEnum} status
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['status'] = undefined;
/**
 * @member {Array.<String>} contractStateTypes
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['contractStateTypes'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreContractsStateRef>} stateRefs
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['stateRefs'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} notary
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['notary'] = undefined;
/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaSoftLockingCondition} softLockingCondition
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['softLockingCondition'] = undefined;
/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaTimeCondition} timeCondition
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['timeCondition'] = undefined;
/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.RelevancyStatusEnum} relevancyStatus
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['relevancyStatus'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.ConstraintTypesEnum>} constraintTypes
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['constraintTypes'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreNodeServicesVaultConstraintInfo>} constraints
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['constraints'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} participants
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['participants'] = undefined;
/**
 * @member {Array.<String>} externalIds
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['externalIds'] = undefined;
/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityAbstractParty>} exactParticipants
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteriaAllOf.prototype['exactParticipants'] = undefined;



/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria['StatusEnum'] = {

    /**
     * value: "UNCONSUMED"
     * @const
     */
    "UNCONSUMED": "UNCONSUMED",

    /**
     * value: "CONSUMED"
     * @const
     */
    "CONSUMED": "CONSUMED",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};


/**
 * Allowed values for the <code>relevancyStatus</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria['RelevancyStatusEnum'] = {

    /**
     * value: "RELEVANT"
     * @const
     */
    "RELEVANT": "RELEVANT",

    /**
     * value: "NOT_RELEVANT"
     * @const
     */
    "NOT_RELEVANT": "NOT_RELEVANT",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};


/**
 * Allowed values for the <code>constraintTypes</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria['ConstraintTypesEnum'] = {

    /**
     * value: "ALWAYS_ACCEPT"
     * @const
     */
    "ALWAYS_ACCEPT": "ALWAYS_ACCEPT",

    /**
     * value: "HASH"
     * @const
     */
    "HASH": "HASH",

    /**
     * value: "CZ_WHITELISTED"
     * @const
     */
    "CZ_WHITELISTED": "CZ_WHITELISTED",

    /**
     * value: "SIGNATURE"
     * @const
     */
    "SIGNATURE": "SIGNATURE"
};



export default NetCordaCoreNodeServicesVaultQueryCriteriaVaultQueryCriteria;

