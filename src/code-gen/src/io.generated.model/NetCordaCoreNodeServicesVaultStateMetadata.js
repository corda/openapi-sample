/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreContractsStateRef from './NetCordaCoreContractsStateRef';
import NetCordaCoreIdentityAbstractParty from './NetCordaCoreIdentityAbstractParty';
import NetCordaCoreNodeServicesVaultConstraintInfo from './NetCordaCoreNodeServicesVaultConstraintInfo';

/**
 * The NetCordaCoreNodeServicesVaultStateMetadata model module.
 * @module io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata
 * @version 1.0.0
 */
class NetCordaCoreNodeServicesVaultStateMetadata {
    /**
     * Constructs a new <code>NetCordaCoreNodeServicesVaultStateMetadata</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata
     * @param contractStateClassName {String} 
     * @param recordedTime {String} JSR310 encoded time representation of Instant
     * @param status {module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata.StatusEnum} 
     */
    constructor(contractStateClassName, recordedTime, status) { 
        
        NetCordaCoreNodeServicesVaultStateMetadata.initialize(this, contractStateClassName, recordedTime, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contractStateClassName, recordedTime, status) { 
        obj['contractStateClassName'] = contractStateClassName;
        obj['recordedTime'] = recordedTime;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeServicesVaultStateMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata} The populated <code>NetCordaCoreNodeServicesVaultStateMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeServicesVaultStateMetadata();

            if (data.hasOwnProperty('ref')) {
                obj['ref'] = NetCordaCoreContractsStateRef.constructFromObject(data['ref']);
            }
            if (data.hasOwnProperty('contractStateClassName')) {
                obj['contractStateClassName'] = ApiClient.convertToType(data['contractStateClassName'], 'String');
            }
            if (data.hasOwnProperty('recordedTime')) {
                obj['recordedTime'] = ApiClient.convertToType(data['recordedTime'], 'String');
            }
            if (data.hasOwnProperty('consumedTime')) {
                obj['consumedTime'] = ApiClient.convertToType(data['consumedTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('notary')) {
                obj['notary'] = NetCordaCoreIdentityAbstractParty.constructFromObject(data['notary']);
            }
            if (data.hasOwnProperty('lockId')) {
                obj['lockId'] = ApiClient.convertToType(data['lockId'], 'String');
            }
            if (data.hasOwnProperty('lockUpdateTime')) {
                obj['lockUpdateTime'] = ApiClient.convertToType(data['lockUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('relevancyStatus')) {
                obj['relevancyStatus'] = ApiClient.convertToType(data['relevancyStatus'], 'String');
            }
            if (data.hasOwnProperty('constraintInfo')) {
                obj['constraintInfo'] = NetCordaCoreNodeServicesVaultConstraintInfo.constructFromObject(data['constraintInfo']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:io.generated.model/NetCordaCoreContractsStateRef} ref
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['ref'] = undefined;

/**
 * @member {String} contractStateClassName
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['contractStateClassName'] = undefined;

/**
 * JSR310 encoded time representation of Instant
 * @member {String} recordedTime
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['recordedTime'] = undefined;

/**
 * JSR310 encoded time representation of Instant
 * @member {String} consumedTime
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['consumedTime'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata.StatusEnum} status
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['status'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreIdentityAbstractParty} notary
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['notary'] = undefined;

/**
 * @member {String} lockId
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['lockId'] = undefined;

/**
 * JSR310 encoded time representation of Instant
 * @member {String} lockUpdateTime
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['lockUpdateTime'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultStateMetadata.RelevancyStatusEnum} relevancyStatus
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['relevancyStatus'] = undefined;

/**
 * @member {module:io.generated.model/NetCordaCoreNodeServicesVaultConstraintInfo} constraintInfo
 */
NetCordaCoreNodeServicesVaultStateMetadata.prototype['constraintInfo'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultStateMetadata['StatusEnum'] = {

    /**
     * value: "UNCONSUMED"
     * @const
     */
    "UNCONSUMED": "UNCONSUMED",

    /**
     * value: "CONSUMED"
     * @const
     */
    "CONSUMED": "CONSUMED",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};


/**
 * Allowed values for the <code>relevancyStatus</code> property.
 * @enum {String}
 * @readonly
 */
NetCordaCoreNodeServicesVaultStateMetadata['RelevancyStatusEnum'] = {

    /**
     * value: "RELEVANT"
     * @const
     */
    "RELEVANT": "RELEVANT",

    /**
     * value: "NOT_RELEVANT"
     * @const
     */
    "NOT_RELEVANT": "NOT_RELEVANT",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"
};



export default NetCordaCoreNodeServicesVaultStateMetadata;

