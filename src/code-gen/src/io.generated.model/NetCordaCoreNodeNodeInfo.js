/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetCordaCoreIdentityParty from './NetCordaCoreIdentityParty';
import NetCordaCoreIdentityPartyAndCertificate from './NetCordaCoreIdentityPartyAndCertificate';
import NetCordaCoreUtilitiesNetworkHostAndPort from './NetCordaCoreUtilitiesNetworkHostAndPort';

/**
 * The NetCordaCoreNodeNodeInfo model module.
 * @module io.generated.model/NetCordaCoreNodeNodeInfo
 * @version 1.0.0
 */
class NetCordaCoreNodeNodeInfo {
    /**
     * Constructs a new <code>NetCordaCoreNodeNodeInfo</code>.
     * @alias module:io.generated.model/NetCordaCoreNodeNodeInfo
     * @param addresses {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} 
     * @param legalIdentitiesAndCerts {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} 
     * @param platformVersion {Number} 
     * @param serial {Number} 
     * @param legalIdentities {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} 
     */
    constructor(addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) { 
        
        NetCordaCoreNodeNodeInfo.initialize(this, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addresses, legalIdentitiesAndCerts, platformVersion, serial, legalIdentities) { 
        obj['addresses'] = addresses;
        obj['legalIdentitiesAndCerts'] = legalIdentitiesAndCerts;
        obj['platformVersion'] = platformVersion;
        obj['serial'] = serial;
        obj['legalIdentities'] = legalIdentities;
    }

    /**
     * Constructs a <code>NetCordaCoreNodeNodeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreNodeNodeInfo} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreNodeNodeInfo} The populated <code>NetCordaCoreNodeNodeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreNodeNodeInfo();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [NetCordaCoreUtilitiesNetworkHostAndPort]);
            }
            if (data.hasOwnProperty('legalIdentitiesAndCerts')) {
                obj['legalIdentitiesAndCerts'] = ApiClient.convertToType(data['legalIdentitiesAndCerts'], [NetCordaCoreIdentityPartyAndCertificate]);
            }
            if (data.hasOwnProperty('platformVersion')) {
                obj['platformVersion'] = ApiClient.convertToType(data['platformVersion'], 'Number');
            }
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'Number');
            }
            if (data.hasOwnProperty('legalIdentities')) {
                obj['legalIdentities'] = ApiClient.convertToType(data['legalIdentities'], [NetCordaCoreIdentityParty]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreUtilitiesNetworkHostAndPort>} addresses
 */
NetCordaCoreNodeNodeInfo.prototype['addresses'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityPartyAndCertificate>} legalIdentitiesAndCerts
 */
NetCordaCoreNodeNodeInfo.prototype['legalIdentitiesAndCerts'] = undefined;

/**
 * @member {Number} platformVersion
 */
NetCordaCoreNodeNodeInfo.prototype['platformVersion'] = undefined;

/**
 * @member {Number} serial
 */
NetCordaCoreNodeNodeInfo.prototype['serial'] = undefined;

/**
 * @member {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} legalIdentities
 */
NetCordaCoreNodeNodeInfo.prototype['legalIdentities'] = undefined;






export default NetCordaCoreNodeNodeInfo;

