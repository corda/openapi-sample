/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetCordaCoreCordappCordappInfo model module.
 * @module io.generated.model/NetCordaCoreCordappCordappInfo
 * @version 1.0.0
 */
class NetCordaCoreCordappCordappInfo {
    /**
     * Constructs a new <code>NetCordaCoreCordappCordappInfo</code>.
     * @alias module:io.generated.model/NetCordaCoreCordappCordappInfo
     * @param type {String} 
     * @param name {String} 
     * @param shortName {String} 
     * @param minimumPlatformVersion {Number} 
     * @param targetPlatformVersion {Number} 
     * @param version {String} 
     * @param vendor {String} 
     * @param licence {String} 
     * @param jarHash {String} Base 58 Encoded Secure Hash
     */
    constructor(type, name, shortName, minimumPlatformVersion, targetPlatformVersion, version, vendor, licence, jarHash) { 
        
        NetCordaCoreCordappCordappInfo.initialize(this, type, name, shortName, minimumPlatformVersion, targetPlatformVersion, version, vendor, licence, jarHash);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, name, shortName, minimumPlatformVersion, targetPlatformVersion, version, vendor, licence, jarHash) { 
        obj['type'] = type;
        obj['name'] = name;
        obj['shortName'] = shortName;
        obj['minimumPlatformVersion'] = minimumPlatformVersion;
        obj['targetPlatformVersion'] = targetPlatformVersion;
        obj['version'] = version;
        obj['vendor'] = vendor;
        obj['licence'] = licence;
        obj['jarHash'] = jarHash;
    }

    /**
     * Constructs a <code>NetCordaCoreCordappCordappInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:io.generated.model/NetCordaCoreCordappCordappInfo} obj Optional instance to populate.
     * @return {module:io.generated.model/NetCordaCoreCordappCordappInfo} The populated <code>NetCordaCoreCordappCordappInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetCordaCoreCordappCordappInfo();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shortName')) {
                obj['shortName'] = ApiClient.convertToType(data['shortName'], 'String');
            }
            if (data.hasOwnProperty('minimumPlatformVersion')) {
                obj['minimumPlatformVersion'] = ApiClient.convertToType(data['minimumPlatformVersion'], 'Number');
            }
            if (data.hasOwnProperty('targetPlatformVersion')) {
                obj['targetPlatformVersion'] = ApiClient.convertToType(data['targetPlatformVersion'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
            if (data.hasOwnProperty('licence')) {
                obj['licence'] = ApiClient.convertToType(data['licence'], 'String');
            }
            if (data.hasOwnProperty('jarHash')) {
                obj['jarHash'] = ApiClient.convertToType(data['jarHash'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
NetCordaCoreCordappCordappInfo.prototype['type'] = undefined;

/**
 * @member {String} name
 */
NetCordaCoreCordappCordappInfo.prototype['name'] = undefined;

/**
 * @member {String} shortName
 */
NetCordaCoreCordappCordappInfo.prototype['shortName'] = undefined;

/**
 * @member {Number} minimumPlatformVersion
 */
NetCordaCoreCordappCordappInfo.prototype['minimumPlatformVersion'] = undefined;

/**
 * @member {Number} targetPlatformVersion
 */
NetCordaCoreCordappCordappInfo.prototype['targetPlatformVersion'] = undefined;

/**
 * @member {String} version
 */
NetCordaCoreCordappCordappInfo.prototype['version'] = undefined;

/**
 * @member {String} vendor
 */
NetCordaCoreCordappCordappInfo.prototype['vendor'] = undefined;

/**
 * @member {String} licence
 */
NetCordaCoreCordappCordappInfo.prototype['licence'] = undefined;

/**
 * Base 58 Encoded Secure Hash
 * @member {String} jarHash
 */
NetCordaCoreCordappCordappInfo.prototype['jarHash'] = undefined;






export default NetCordaCoreCordappCordappInfo;

