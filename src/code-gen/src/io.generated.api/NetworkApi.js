/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InvocationError from '../io.generated.model/InvocationError';
import IoBluebankBraidCordaServicesSimpleNodeInfo from '../io.generated.model/IoBluebankBraidCordaServicesSimpleNodeInfo';
import NetCordaCoreIdentityParty from '../io.generated.model/NetCordaCoreIdentityParty';

/**
* Network service.
* @module io.generated.api/NetworkApi
* @version 1.0.0
*/
export default class NetworkApi {

    /**
    * Constructs a new NetworkApi. 
    * @alias module:io.generated.api/NetworkApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkNodes operation.
     * @callback module:io.generated.api/NetworkApi~networkNodesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:io.generated.model/IoBluebankBraidCordaServicesSimpleNodeInfo>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.
     * @param {Object} opts Optional parameters
     * @param {String} opts.hostAndPort 
     * @param {String} opts.x500Name 
     * @param {module:io.generated.api/NetworkApi~networkNodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:io.generated.model/IoBluebankBraidCordaServicesSimpleNodeInfo>}
     */
    networkNodes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'host-and-port': opts['hostAndPort'],
        'x500-name': opts['x500Name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [IoBluebankBraidCordaServicesSimpleNodeInfo];
      return this.apiClient.callApi(
        '/network/nodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkNodesSelf operation.
     * @callback module:io.generated.api/NetworkApi~networkNodesSelfCallback
     * @param {String} error Error message, if any.
     * @param {module:io.generated.model/IoBluebankBraidCordaServicesSimpleNodeInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.
     * @param {module:io.generated.api/NetworkApi~networkNodesSelfCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.generated.model/IoBluebankBraidCordaServicesSimpleNodeInfo}
     */
    networkNodesSelf(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoBluebankBraidCordaServicesSimpleNodeInfo;
      return this.apiClient.callApi(
        '/network/nodes/self', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkNotaries operation.
     * @callback module:io.generated.api/NetworkApi~networkNotariesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:io.generated.model/NetCordaCoreIdentityParty>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.x500Name 
     * @param {module:io.generated.api/NetworkApi~networkNotariesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:io.generated.model/NetCordaCoreIdentityParty>}
     */
    networkNotaries(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'x500-name': opts['x500Name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NetCordaCoreIdentityParty];
      return this.apiClient.callApi(
        '/network/notaries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
